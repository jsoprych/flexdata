{
  "version": 3,
  "sources": ["../../../../src/data-controller.ts", "../../../../src/components/fd-detail-view.ts"],
  "sourcesContent": ["export class DataController {\n    private static instance: DataController;\n    private data: Record<string, string>[] = [];\n    private filteredData: Record<string, string>[] = [];\n    private sortColumn: string | null = null;\n    private sortDirection: 'asc' | 'desc' = 'asc';\n    private selectedRow: Record<string, string> | null = null;\n    private listeners: { [key: string]: ((data: any) => void)[] } = {};\n\n    private constructor() {}\n\n    static getInstance(): DataController {\n        if (!DataController.instance) {\n            DataController.instance = new DataController();\n        }\n        return DataController.instance;\n    }\n\n    async loadData(url: string) {\n        try {\n            const response = await fetch(url);\n            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n            this.data = await response.json();\n            this.filteredData = [...this.data];\n            this.notify('data-updated', this.filteredData);\n        } catch (error) {\n            console.error('Fetch error:', error);\n            this.notify('error', { message: `Error loading data: ${error.message}` });\n        }\n    }\n\n    setFilter(filter: string) {\n        const headers = this.data.length > 0 ? Object.keys(this.data[0]) : [];\n        this.filteredData = this.data.filter(row =>\n            headers.some(header => (row[header] || '').toLowerCase().includes(filter.toLowerCase()))\n        );\n        this.notify('data-updated', this.filteredData);\n    }\n\n    setSort(column: string, direction: 'asc' | 'desc') {\n        this.sortColumn = column;\n        this.sortDirection = direction;\n        this.filteredData.sort((a, b) => {\n            const aValue = a[column] ?? '';\n            const bValue = b[column] ?? '';\n            const numericColumns = ['customer_id', 'tax_id'];\n            const isNumericColumn = numericColumns.includes(column);\n            const aIsNumber = !isNaN(parseFloat(aValue)) && isFinite(parseFloat(aValue));\n            const bIsNumber = !isNaN(parseFloat(bValue)) && isFinite(parseFloat(bValue));\n            if (isNumericColumn && aIsNumber && bIsNumber) {\n                return this.sortDirection === 'asc'\n                    ? parseFloat(aValue) - parseFloat(bValue)\n                    : parseFloat(bValue) - parseFloat(aValue);\n            }\n            const aStr = aValue.toString().toLowerCase();\n            const bStr = bValue.toString().toLowerCase();\n            return this.sortDirection === 'asc'\n                ? aStr.localeCompare(bStr)\n                : bStr.localeCompare(aStr);\n        });\n        this.notify('data-updated', this.filteredData);\n    }\n\n    setSelectedRow(row: Record<string, string> | null) {\n        this.selectedRow = row;\n        this.notify('row-selected', this.selectedRow);\n    }\n\n    getFilteredData(): Record<string, string>[] {\n        return this.filteredData;\n    }\n\n    getSelectedRow(): Record<string, string> | null {\n        return this.selectedRow;\n    }\n\n    getSortColumn(): string | null {\n        return this.sortColumn;\n    }\n\n    getSortDirection(): 'asc' | 'desc' {\n        return this.sortDirection;\n    }\n\n    on(event: string, callback: (data: any) => void) {\n        if (!this.listeners[event]) {\n            this.listeners[event] = [];\n        }\n        this.listeners[event].push(callback);\n    }\n\n    off(event: string, callback: (data: any) => void) {\n        if (this.listeners[event]) {\n            this.listeners[event] = this.listeners[event].filter(cb => cb !== callback);\n        }\n    }\n\n    private notify(event: string, data: any) {\n        if (this.listeners[event]) {\n            this.listeners[event].forEach(callback => callback(data));\n        }\n    }\n}", "import { DataController } from '../data-controller.js';\n\nclass FDDetailView extends HTMLElement {\n    private shadow: ShadowRoot;\n    private dataController: DataController;\n\n    constructor() {\n        super();\n        this.shadow = this.attachShadow({ mode: 'open' });\n        this.dataController = DataController.getInstance();\n        this.render();\n    }\n\n    connectedCallback() {\n        this.dataController.on('row-selected', (rowData) => this.render(rowData));\n    }\n\n    disconnectedCallback() {\n        this.dataController.off('row-selected', (rowData) => this.render(rowData));\n    }\n\n    private render(data: Record<string, string> | null = null) {\n        const personalFields = ['first_name', 'last_name', 'customer_type'];\n        const accountFields = ['customer_id', 'customer_code', 'company_name', 'tax_id', 'status', 'notes'];\n        const metaFields = ['created_at', 'updated_at'];\n\n        this.shadow.innerHTML = `\n            <style>\n                :host {\n                    display: block;\n                    max-width: 1200px;\n                    width: 100%;\n                    background: var(--bg-primary, #ffffff);\n                    border-radius: var(--border-radius, 8px);\n                    box-shadow: var(--shadow, 0 2px 4px rgba(0, 0, 0, 0.05));\n                    padding: var(--padding, 16px);\n                    margin-top: 16px;\n                    font-family: var(--font-family, 'Helvetica', 'Arial', sans-serif);\n                    color: var(--text-primary, #2e3440);\n                }\n                h2 {\n                    font-size: 20px;\n                    font-weight: 600;\n                    margin-bottom: 16px;\n                    color: var(--text-primary, #2e3440);\n                }\n                details {\n                    margin-bottom: 8px;\n                }\n                summary {\n                    cursor: pointer;\n                    font-weight: 600;\n                    color: var(--text-secondary, #5e81ac);\n                    padding: 8px;\n                    background: var(--bg-header, #d9e6f2);\n                    border-radius: var(--border-radius, 8px);\n                }\n                summary:hover {\n                    background: var(--bg-header-hover, #c8d7e8);\n                }\n                ul {\n                    list-style: none;\n                    padding: 0;\n                    margin: 0;\n                    display: flex;\n                    flex-direction: column;\n                    gap: 8px;\n                }\n                li {\n                    display: flex;\n                    justify-content: space-between;\n                    padding: 8px;\n                    border-bottom: 1px solid var(--border-color, #d8dee9);\n                }\n                .detail-label {\n                    font-weight: 600;\n                    color: var(--text-secondary, #5e81ac);\n                    flex: 1;\n                    min-width: 150px;\n                }\n                .detail-value {\n                    flex: 2;\n                    text-align: right;\n                }\n                .no-selection {\n                    color: var(--text-secondary, #5e81ac);\n                    font-style: italic;\n                    text-align: center;\n                }\n                .save-button {\n                    margin-top: 16px;\n                    padding: 8px 16px;\n                    border: 1px solid var(--border-color, #d8dee9);\n                    border-radius: var(--border-radius, 8px);\n                    background: var(--bg-primary, #ffffff);\n                    color: var(--text-button, #81a1c1);\n                    cursor: pointer;\n                }\n                .save-button:hover {\n                    background: var(--bg-header-hover, #c8d7e8);\n                }\n                @media (max-width: 768px) {\n                    :host {\n                        padding: var(--padding-mobile, 8px);\n                    }\n                    h2 {\n                        font-size: 18px;\n                    }\n                    li {\n                        flex-direction: column;\n                        gap: 4px;\n                    }\n                    .detail-label, .detail-value {\n                        text-align: left;\n                        flex: none;\n                    }\n                }\n            </style>\n            <h2>Customer Details</h2>\n            ${data ? `\n                <details open>\n                    <summary>Personal Info</summary>\n                    <ul role=\"list\">\n                        ${personalFields.map(key => data[key] !== undefined ? `\n                            <li>\n                                <span class=\"detail-label\">${key.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase())}:</span>\n                                <span class=\"detail-value\">${data[key] || 'N/A'}</span>\n                            </li>\n                        ` : '').join('')}\n                    </ul>\n                </details>\n                <details open>\n                    <summary>Account Info</summary>\n                    <ul role=\"list\">\n                        ${accountFields.map(key => data[key] !== undefined ? `\n                            <li>\n                                <span class=\"detail-label\">${key.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase())}:</span>\n                                <span class=\"detail-value\">${data[key] || 'N/A'}</span>\n                            </li>\n                        ` : '').join('')}\n                    </ul>\n                </details>\n                <details>\n                    <summary>Metadata</summary>\n                    <ul role=\"list\">\n                        ${metaFields.map(key => data[key] !== undefined ? `\n                            <li>\n                                <span class=\"detail-label\">${key.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase())}:</span>\n                                <span class=\"detail-value\">${data[key] || 'N/A'}</span>\n                            </li>\n                        ` : '').join('')}\n                    </ul>\n                </details>\n                <button class=\"save-button\" disabled>Save Changes</button>\n            ` : '<p class=\"no-selection\">Select a row to view details</p>'}\n        `;\n    }\n}\n\ncustomElements.define('fd-detail-view', FDDetailView);"],
  "mappings": "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",
  "names": ["_DataController", "__publicField", "url", "response", "error", "filter", "headers", "row", "header", "column", "direction", "a", "b", "_a", "_b", "aValue", "bValue", "isNumericColumn", "aIsNumber", "bIsNumber", "aStr", "bStr", "event", "callback", "cb", "data", "DataController", "FDDetailView", "__publicField", "DataController", "rowData", "data", "personalFields", "accountFields", "metaFields", "key", "c"]
}
