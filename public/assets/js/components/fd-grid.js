"use strict";(()=>{var x=Object.defineProperty;var C=(h,e,t)=>e in h?x(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t;var o=(h,e,t)=>C(h,typeof e!="symbol"?e+"":e,t);var c=class c{constructor(){o(this,"data",[]);o(this,"filteredData",[]);o(this,"sortColumn",null);o(this,"sortDirection","asc");o(this,"selectedRow",null);o(this,"listeners",{})}static getInstance(){return c.instance||(c.instance=new c),c.instance}async loadData(e){try{let t=await fetch(e);if(!t.ok)throw new Error("HTTP error! status: ".concat(t.status));this.data=await t.json(),this.filteredData=[...this.data],this.notify("data-updated",this.filteredData)}catch(t){console.error("Fetch error:",t),this.notify("error",{message:"Error loading data: ".concat(t.message)})}}setFilter(e){let t=this.data.length>0?Object.keys(this.data[0]):[];this.filteredData=this.data.filter(a=>t.some(i=>(a[i]||"").toLowerCase().includes(e.toLowerCase()))),this.notify("data-updated",this.filteredData)}setSort(e,t){this.sortColumn=e,this.sortDirection=t,this.filteredData.sort((a,i)=>{var u,f;let l=(u=a[e])!=null?u:"",n=(f=i[e])!=null?f:"",g=["customer_id","tax_id"].includes(e),p=!isNaN(parseFloat(l))&&isFinite(parseFloat(l)),r=!isNaN(parseFloat(n))&&isFinite(parseFloat(n));if(g&&p&&r)return this.sortDirection==="asc"?parseFloat(l)-parseFloat(n):parseFloat(n)-parseFloat(l);let s=l.toString().toLowerCase(),d=n.toString().toLowerCase();return this.sortDirection==="asc"?s.localeCompare(d):d.localeCompare(s)}),this.notify("data-updated",this.filteredData)}setSelectedRow(e){this.selectedRow=e,this.notify("row-selected",this.selectedRow)}getFilteredData(){return this.filteredData}getSelectedRow(){return this.selectedRow}getSortColumn(){return this.sortColumn}getSortDirection(){return this.sortDirection}on(e,t){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(t)}off(e,t){this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter(a=>a!==t))}notify(e,t){this.listeners[e]&&this.listeners[e].forEach(a=>a(t))}};o(c,"instance");var b=c;var m=class extends HTMLElement{constructor(){super();o(this,"shadow");o(this,"dataController");o(this,"currentPage",1);o(this,"rowsPerPage",10);o(this,"showJson",!1);this.shadow=this.attachShadow({mode:"open"}),this.dataController=b.getInstance(),this.render()}static get observedAttributes(){return["data-src","rows-per-page"]}attributeChangedCallback(t,a,i){t==="data-src"&&i&&a!==i&&this.dataController.loadData(i),t==="rows-per-page"&&(this.rowsPerPage=parseInt(i||"10",10)||10,this.currentPage=1,this.render())}connectedCallback(){this.dataController.on("data-updated",()=>this.render()),this.dataController.on("error",a=>this.handleError(a));let t=this.getAttribute("data-src");t&&this.dataController.loadData(t)}disconnectedCallback(){this.dataController.off("data-updated",()=>this.render()),this.dataController.off("error",t=>this.handleError(t))}handleError(t){this.shadow.innerHTML="\n            <style>\n                .error { color: var(--text-error, #d32f2f); font-family: var(--font-family, 'Helvetica', 'Arial', sans-serif); }\n            </style>\n            <div class=\"error\">".concat(t.message,"</div>\n        ")}render(){var v,g,p;let t=this.dataController.getFilteredData().length>0?Object.keys(this.dataController.getFilteredData()[0]):[],a=(this.currentPage-1)*this.rowsPerPage,i=a+this.rowsPerPage,l=this.dataController.getFilteredData().slice(a,i),n=Math.ceil(this.dataController.getFilteredData().length/this.rowsPerPage);this.shadow.innerHTML='\n            <style>\n                :host {\n                    display: block;\n                    font-family: var(--font-family, \'Helvetica\', \'Arial\', sans-serif);\n                }\n                .grid-container {\n                    background: var(--bg-primary, #ffffff);\n                    border-radius: var(--border-radius, 8px);\n                    box-shadow: var(--shadow, 0 2px 4px rgba(0, 0, 0, 0.05));\n                    padding: var(--padding, 16px);\n                }\n                .controls {\n                    margin-bottom: 16px;\n                    display: flex;\n                    gap: 16px;\n                    align-items: center;\n                }\n                input[type="text"] {\n                    padding: 8px;\n                    border: 1px solid var(--border-color, #d8dee9);\n                    border-radius: var(--border-radius, 8px);\n                    font-size: var(--font-size-cell, 14px);\n                }\n                select {\n                    padding: 8px;\n                    border: 1px solid var(--border-color, #d8dee9);\n                    border-radius: var(--border-radius, 8px);\n                }\n                table {\n                    width: 100%;\n                    border-collapse: collapse;\n                    background: var(--bg-primary, #ffffff);\n                }\n                th {\n                    background: var(--bg-header, #d9e6f2);\n                    padding: 12px;\n                    font-weight: 600;\n                    text-align: left;\n                    cursor: pointer;\n                    user-select: none;\n                    border-bottom: 1px solid var(--border-color, #d8dee9);\n                }\n                th:hover {\n                    background: var(--bg-header-hover, #c8d7e8);\n                }\n                td {\n                    padding: 12px;\n                    border-bottom: 1px solid var(--border-color, #d8dee9);\n                    font-size: var(--font-size-cell, 14px);\n                }\n                tr:nth-child(even) {\n                    background: var(--bg-row-even, #e6f0fa);\n                }\n                tr:hover {\n                    background: var(--bg-cell-bubble, #f0f4f8);\n                    cursor: pointer;\n                }\n                .pagination {\n                    margin-top: 16px;\n                    display: flex;\n                    gap: 8px;\n                    justify-content: center;\n                    align-items: center;\n                }\n                button {\n                    padding: 8px 16px;\n                    border: 1px solid var(--border-color, #d8dee9);\n                    border-radius: var(--border-radius, 8px);\n                    background: var(--bg-primary, #ffffff);\n                    color: var(--text-button, #81a1c1);\n                    cursor: pointer;\n                }\n                button:hover {\n                    background: var(--bg-header-hover, #c8d7e8);\n                }\n                button:disabled {\n                    color: var(--text-disabled, #a3be8c);\n                    cursor: not-allowed;\n                }\n                .json-view {\n                    margin-top: 16px;\n                    padding: 8px;\n                    background: var(--bg-row-even, #e6f0fa);\n                    border: 1px solid var(--border-color, #d8dee9);\n                    border-radius: var(--border-radius, 8px);\n                    max-height: 300px;\n                    overflow: auto;\n                    font-family: monospace;\n                    font-size: var(--font-size-cell, 14px);\n                }\n                @media (max-width: 768px) {\n                    .grid-container {\n                        padding: var(--padding-mobile, 8px);\n                    }\n                    th, td {\n                        padding: 8px;\n                        font-size: var(--font-size-cell-mobile, 13px);\n                    }\n                    .controls {\n                        flex-direction: column;\n                        align-items: stretch;\n                    }\n                    .json-view {\n                        font-size: var(--font-size-cell-mobile, 13px);\n                    }\n                }\n            </style>\n            <div class="grid-container" role="grid">\n                <div class="controls">\n                    <input type="text" placeholder="Filter..." aria-label="Filter grid data">\n                    <select aria-label="Rows per page">\n                        <option value="5" '.concat(this.rowsPerPage===5?"selected":"",'>5</option>\n                        <option value="10" ').concat(this.rowsPerPage===10?"selected":"",'>10</option>\n                        <option value="20" ').concat(this.rowsPerPage===20?"selected":"",'>20</option>\n                        <option value="50" ').concat(this.rowsPerPage===50?"selected":"",'>50</option>\n                    </select>\n                    <button class="toggle-json">Toggle JSON</button>\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            ').concat(t.map(r=>'\n                                <th aria-sort="'.concat(this.dataController.getSortColumn()===r?this.dataController.getSortDirection():"none",'">\n                                    ').concat(r.replace(/_/g," ").replace(/\b\w/g,s=>s.toUpperCase()),"\n                                    ").concat(this.dataController.getSortColumn()===r?this.dataController.getSortDirection()==="asc"?"\u2191":"\u2193":"","\n                                </th>\n                            ")).join(""),"\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ").concat(l.map(r=>'\n                            <tr class="selectable">\n                                '.concat(t.map(s=>"<td>".concat(r[s]||"","</td>")).join(""),"\n                            </tr>\n                        ")).join(""),'\n                    </tbody>\n                </table>\n                <div class="pagination">\n                    <button ').concat(this.currentPage===1?"disabled":"",">Previous</button>\n                    <span>Page ").concat(this.currentPage," of ").concat(n,"</span>\n                    <button ").concat(this.currentPage===n?"disabled":"",">Next</button>\n                </div>\n                ").concat(this.showJson&&this.dataController.getFilteredData().length>0?'\n                    <pre class="json-view">'.concat(JSON.stringify(this.dataController.getFilteredData(),null,2),"</pre>\n                "):"","\n            </div>\n        "),(v=this.shadow.querySelector("input"))==null||v.addEventListener("input",r=>{let s=r.target.value;this.dataController.setFilter(s),this.currentPage=1}),(g=this.shadow.querySelector("select"))==null||g.addEventListener("change",r=>{this.rowsPerPage=parseInt(r.target.value,10),this.currentPage=1,this.render()}),this.shadow.querySelectorAll("th").forEach((r,s)=>{r.addEventListener("click",()=>{let d=t[s],u=this.dataController.getSortColumn(),f=this.dataController.getSortDirection(),w=u===d&&f==="asc"?"desc":"asc";this.dataController.setSort(d,w)})}),this.shadow.querySelectorAll(".pagination button").forEach(r=>{r.addEventListener("click",()=>{r.textContent==="Previous"&&this.currentPage>1?this.currentPage--:r.textContent==="Next"&&this.currentPage<n&&this.currentPage++,this.render()})}),this.shadow.querySelectorAll("tr.selectable").forEach(r=>{r.addEventListener("click",()=>{let s=Array.from(this.shadow.querySelectorAll("tr.selectable")).indexOf(r),d=l[s];this.dataController.setSelectedRow(d)})}),(p=this.shadow.querySelector(".toggle-json"))==null||p.addEventListener("click",()=>{this.showJson=!this.showJson,this.render()})}};customElements.define("fd-grid",m);})();
//# sourceMappingURL=fd-grid.js.map
