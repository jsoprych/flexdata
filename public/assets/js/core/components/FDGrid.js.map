{
  "version": 3,
  "sources": ["../../../../../src/core/BaseControl.ts", "../../../../../src/core/components/FDGrid.ts"],
  "sourcesContent": ["// src/core/BaseControl.ts\nexport abstract class BaseControl extends HTMLElement {\n  protected shadow: ShadowRoot;\n\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n  }\n\n  connectedCallback() {\n    this.render();\n    this.attachEventListeners();\n  }\n\n  disconnectedCallback() {\n    this.detachEventListeners();\n  }\n\n  protected abstract render(): void;\n\n  protected attachEventListeners(): void {}\n  protected detachEventListeners(): void {}\n}\n", "// src/core/components/FDGrid.ts\nimport { BaseControl } from '../BaseControl';\n\nexport class FDGrid extends BaseControl {\n  private _rowsPerPage: number = 10;\n\n  static get observedAttributes() {\n    return ['rows-per-page'];\n  }\n\n  get rowsPerPage() {\n    return this._rowsPerPage;\n  }\n\n  set rowsPerPage(value: number) {\n    if (value !== this._rowsPerPage) {\n      this._rowsPerPage = value;\n      this.setAttribute('rows-per-page', value.toString());\n      this.render();\n    }\n  }\n\n  protected attributeToProperty(attr: string): string | null {\n    return attr === 'rows-per-page' ? 'rowsPerPage' : null;\n  }\n\n  protected render() {\n    this.shadow.innerHTML = `\n      <style>\n        :host { display: block; padding: 8px; background: #f9f9f9; }\n        .grid-container { border: 1px solid #ccc; padding: 10px; }\n      </style>\n      <div class=\"grid-container\">\n        <slot>Default Grid Content (Rows per page: ${this.rowsPerPage})</slot>\n      </div>\n    `;\n  }\n\n  protected attachEventListeners() {\n    this.shadow.addEventListener('click', this.onClick);\n  }\n\n  protected detachEventListeners() {\n    this.shadow.removeEventListener('click', this.onClick);\n  }\n\n  private onClick = (event: Event) => {\n    this.dispatchEvent(new CustomEvent('grid-clicked', {\n      detail: { message: 'Grid was clicked!' },\n      bubbles: true,\n      composed: true\n    }));\n  };\n}\n\ncustomElements.define('fd-grid', FDGrid);\n"],
  "mappings": "uLACO,IAAeA,EAAf,cAAmC,WAAY,CAGpD,aAAc,CACZ,MAAM,EAHRC,EAAA,KAAU,UAIR,KAAK,OAAS,KAAK,aAAa,CAAE,KAAM,MAAO,CAAC,CAClD,CAEA,mBAAoB,CAClB,KAAK,OAAO,EACZ,KAAK,qBAAqB,CAC5B,CAEA,sBAAuB,CACrB,KAAK,qBAAqB,CAC5B,CAIU,sBAA6B,CAAC,CAC9B,sBAA6B,CAAC,CAC1C,ECnBO,IAAMC,EAAN,cAAqBC,CAAY,CAAjC,kCACLC,EAAA,KAAQ,eAAuB,IA0C/BA,EAAA,KAAQ,UAAWC,GAAiB,CAClC,KAAK,cAAc,IAAI,YAAY,eAAgB,CACjD,OAAQ,CAAE,QAAS,mBAAoB,EACvC,QAAS,GACT,SAAU,EACZ,CAAC,CAAC,CACJ,GA9CA,WAAW,oBAAqB,CAC9B,MAAO,CAAC,eAAe,CACzB,CAEA,IAAI,aAAc,CAChB,OAAO,KAAK,YACd,CAEA,IAAI,YAAYC,EAAe,CACzBA,IAAU,KAAK,eACjB,KAAK,aAAeA,EACpB,KAAK,aAAa,gBAAiBA,EAAM,SAAS,CAAC,EACnD,KAAK,OAAO,EAEhB,CAEU,oBAAoBC,EAA6B,CACzD,OAAOA,IAAS,gBAAkB,cAAgB,IACpD,CAEU,QAAS,CACjB,KAAK,OAAO,UAAY,qQAMyB,YAAK,YAAW,+BAGnE,CAEU,sBAAuB,CAC/B,KAAK,OAAO,iBAAiB,QAAS,KAAK,OAAO,CACpD,CAEU,sBAAuB,CAC/B,KAAK,OAAO,oBAAoB,QAAS,KAAK,OAAO,CACvD,CASF,EAEA,eAAe,OAAO,UAAWL,CAAM",
  "names": ["BaseControl", "__publicField", "FDGrid", "BaseControl", "__publicField", "event", "value", "attr"]
}
