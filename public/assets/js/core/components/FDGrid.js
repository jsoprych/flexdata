"use strict";(()=>{var n=Object.defineProperty;var d=(r,t,e)=>t in r?n(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var s=(r,t,e)=>d(r,typeof t!="symbol"?t+"":t,e);var i=class extends HTMLElement{constructor(){super();s(this,"shadow");this.shadow=this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.attachEventListeners()}disconnectedCallback(){this.detachEventListeners()}attachEventListeners(){}detachEventListeners(){}};var o=class extends i{constructor(){super(...arguments);s(this,"_rowsPerPage",10);s(this,"onClick",e=>{this.dispatchEvent(new CustomEvent("grid-clicked",{detail:{message:"Grid was clicked!"},bubbles:!0,composed:!0}))})}static get observedAttributes(){return["rows-per-page"]}get rowsPerPage(){return this._rowsPerPage}set rowsPerPage(e){e!==this._rowsPerPage&&(this._rowsPerPage=e,this.setAttribute("rows-per-page",e.toString()),this.render())}attributeToProperty(e){return e==="rows-per-page"?"rowsPerPage":null}render(){this.shadow.innerHTML='\n      <style>\n        :host { display: block; padding: 8px; background: #f9f9f9; }\n        .grid-container { border: 1px solid #ccc; padding: 10px; }\n      </style>\n      <div class="grid-container">\n        <slot>Default Grid Content (Rows per page: '.concat(this.rowsPerPage,")</slot>\n      </div>\n    ")}attachEventListeners(){this.shadow.addEventListener("click",this.onClick)}detachEventListeners(){this.shadow.removeEventListener("click",this.onClick)}};customElements.define("fd-grid",o);})();
//# sourceMappingURL=FDGrid.js.map
